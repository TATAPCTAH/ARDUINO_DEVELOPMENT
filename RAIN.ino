#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 20, 4);
#if defined(ARDUINO) && ARDUINO >= 100
#define printByte(args)  write(args);
#else
#define printByte(args)  print(args,BYTE);
#endif
uint8_t lu[8] = {0x3,0x4,0x8,0x6,0x6,0x4,0xe,0x15};
uint8_t ru[8] = {0x1c,0x12,0x11,0x10,0x10,0x10,0x10,0x10};
uint8_t ld[8] = {0x14,0x14,0x4,0x6,0x6,0x6,0x6,0x6};
uint8_t rd[8] = {0x14,0x8,0x0,0x0,0x0,0x0,0x0,0x0}; 

uint8_t lu_1[8] = {0x0,0x3,0x4,0x8,0x6,0x6,0x4,0xe};
uint8_t ru_1[8] = {0x0,0x1c,0x12,0x11,0x10,0x10,0x10,0x10};
uint8_t ld_1[8] = {0x15,0x14,0x14,0x6,0x6,0x6,0x6,0x6};
uint8_t rd_1[8] = {0x10,0x14,0x8,0x0,0x0,0x0,0x0,0x0};

//WALK
//uint8_t massiv_walk[4][6][8] = {
//  {{0x1,0x2,0x4,0x3,0x3,0x2,0x7,0xa},{0x1e,0x9,0x8,0x8,0x8,0x8,0x8,0x18},{0x0,0x0,0x10,0x0,0x0,0x0,0x0,0x0},{0xa,0xa,0x2,0x2,0x3,0x2,0x4,0x6},{0xa,0x4,0x0,0x0,0x0,0x10,0x10,0x18},{0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}},
//  {{0x0,0x1,0x2,0x1,0x1,0x1,0x3,0x5},{0x1f,0x4,0x4,0x14,0x14,0x4,0x14,0xc},{0x0,0x10,0x8,0x0,0x0,0x0,0x0,0x0},{0x5,0x5,0x1,0x1,0x3,0x2,0x4,0x6},{0x5,0x2,0x0,0x0,0x0,0x10,0x10,0x18},{0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}},
//  {{0x0,0x0,0x1,0x0,0x0,0x0,0x1,0x2},{0xf,0x12,0x2,0x1a,0x1a,0x12,0x1a,0x16},{0x10,0x8,0x4,0x0,0x0,0x0,0x0,0x0},{0x2,0x2,0x0,0x0,0x0,0x0,0x1,0x1},{0x12,0x11,0x10,0x10,0x18,0x14,0x4,0x16},{0x10,0x0,0x0,0x0,0x0,0x0,0x0,0x0}},
//  {{0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1},{0x7,0x9,0x11,0xd,0xd,0x9,0x1d,0xb},{0x18,0x4,0x2,0x0,0x0,0x0,0x0,0x0},{0x1,0x1,0x0,0x0,0x0,0x0,0x1,0x1},{0x9,0x8,0x8,0x8,0x18,0x14,0x4,0x16},{0x8,0x10,0x0,0x0,0x0,0x0,0x0,0x0}}
//  };
uint8_t massiv_walk[4][6][8] = {
  {{0x1,0x2,0x4,0x3,0x3,0x2,0x7,0xa},{0x1e,0x9,0x8,0x8,0x8,0x8,0x8,0x18},{0x0,0x0,0x10,0x0,0x0,0x0,0x0,0x0},{0xa,0xa,0x2,0x3,0x3,0x3,0x3,0x2},{0xa,0x4,0x0,0x0,0x0,0x0,0x0,0x0},{0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}},
  {{0x0,0x1,0x2,0x1,0x1,0x1,0x3,0x5},{0x1f,0x4,0x4,0x14,0x14,0x4,0x14,0xc},{0x0,0x10,0x8,0x0,0x0,0x0,0x0,0x0},{0x5,0x5,0x1,0x1,0x1,0x1,0x1,0x0},{0x5,0x2,0x0,0x10,0x10,0x10,0x10,0x10},{0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0}},
  {{0x0,0x0,0x1,0x0,0x0,0x0,0x1,0x2},{0xf,0x12,0x2,0x1a,0x1a,0x12,0x1a,0x16},{0x10,0x8,0x4,0x0,0x0,0x0,0x0,0x0},{0x2,0x2,0x0,0x0,0x0,0x0,0x0,0x0},{0x12,0x11,0x10,0x18,0x18,0x18,0x18,0x10},{0x10,0x0,0x0,0x0,0x0,0x0,0x0,0x0}},
  {{0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1},{0x7,0x9,0x11,0xd,0xd,0x9,0x1d,0xb},{0x18,0x4,0x2,0x0,0x0,0x0,0x0,0x0},{0x1,0x1,0x0,0x0,0x0,0x0,0x0,0x0},{0x9,0x8,0x8,0xc,0xc,0xc,0xc,0x4},{0x8,0x10,0x0,0x0,0x0,0x0,0x0,0x0}}
  };
    byte chet = 0;
    byte g = 0;
void setup() {
  // put your setup code here, to run once:
lcd.init();
  lcd.backlight();
    lcd.begin(20,4);
}

void loop() {
  // put your main code here, to run repeatedly:
  while(g < 15){
//  lcd.createChar(0,lu);
//    lcd.createChar(1,ru);
//    lcd.createChar(2,ld);
//    lcd.createChar(3,rd);
//    lcd.clear();
//    lcd.setCursor(g,0);
//    lcd.printByte(0);
//        lcd.setCursor(g+1,0);
//    lcd.printByte(1);
//        lcd.setCursor(g,1);
//    lcd.printByte(2);
//        lcd.setCursor(g+1,1);
//    lcd.printByte(3);
//    delay(150);
    while(chet < 4){
      uint8_t fake[8];
      for(byte i = 0;i < 8;++i){fake[i] = massiv_walk[chet][0][i];}
      lcd.createChar(0,fake);
      for(byte i = 0;i < 8;++i){fake[i] = massiv_walk[chet][1][i];}
      lcd.createChar(1,fake);
      for(byte i = 0;i < 8;++i){fake[i] = massiv_walk[chet][2][i];}
      lcd.createChar(2,fake);
      for(byte i = 0;i < 8;++i){fake[i] = massiv_walk[chet][3][i];}
      lcd.createChar(3,fake);
      for(byte i = 0;i < 8;++i){fake[i] = massiv_walk[chet][4][i];}
      lcd.createChar(4,fake);
      for(byte i = 0;i < 8;++i){fake[i] = massiv_walk[chet][5][i];}
      lcd.createChar(5,fake);
          lcd.setCursor(g,0);
    lcd.printByte(0);
        lcd.setCursor(g+1,0);
    lcd.printByte(1);
        lcd.setCursor(g+2,0);
    lcd.printByte(2);
    
        lcd.setCursor(g,1);
    lcd.printByte(3);
        lcd.setCursor(g+1,1);
    lcd.printByte(4);
        lcd.setCursor(g+2,1);
    lcd.printByte(5);
    delay(150);
    chet++;
      }
      lcd.clear();
      lcd.createChar(0,lu);
    lcd.createChar(1,ru);
    lcd.createChar(2,ld);
    lcd.createChar(3,rd);
    
    lcd.setCursor(g+1,0);
    lcd.printByte(0);
        lcd.setCursor(g+2,0);
    lcd.printByte(1);
        lcd.setCursor(g+1,1);
    lcd.printByte(2);
        lcd.setCursor(g+2,1);
    lcd.printByte(3);
      chet = 0;
      delay(150);
      g++;
  }
  lcd.clear();
  g=0;
}
